package org.oasis_open.docs.wsn._2004._06.wsn_ws_basenotification_1_2_draft_01_wsdl.service;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;
import org.oasis_open.docs.wsn._2004._06.wsn_ws_basenotification_1_2_draft_01_wsdl.NotificationConsumer;
import org.oasis_open.docs.wsn._2004._06.wsn_ws_basenotification_1_2_draft_01_wsdl.NotificationProducer;
import org.oasis_open.docs.wsn._2004._06.wsn_ws_basenotification_1_2_draft_01_wsdl.SubscriptionManager;

/**
 * This class was generated by Apache CXF 2.6.3
 * 2013-04-11T11:06:15.799-04:00
 * Generated source version: 2.6.3
 * 
 */
@WebServiceClient(name = "WS-BaseNotificationService", 
                  wsdlLocation = "/schema/org/cagrid/wsrf/notification/WS-BaseN_service.wsdl",
                  targetNamespace = "http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl/service") 
public class WSBaseNotificationService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl/service", "WS-BaseNotificationService");
    public final static QName NotificationProducerPort = new QName("http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl/service", "NotificationProducerPort");
    public final static QName SubscriptionManagerPort = new QName("http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl/service", "SubscriptionManagerPort");
    public final static QName NotificationConsumerPort = new QName("http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl/service", "NotificationConsumerPort");
    static {
        URL url = WSBaseNotificationService.class.getResource("/schema/org/cagrid/wsrf/notification/WS-BaseN_service.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(WSBaseNotificationService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "/schema/org/cagrid/wsrf/notification/WS-BaseN_service.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public WSBaseNotificationService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSBaseNotificationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSBaseNotificationService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns NotificationProducer
     */
    @WebEndpoint(name = "NotificationProducerPort")
    public NotificationProducer getNotificationProducerPort() {
        return super.getPort(NotificationProducerPort, NotificationProducer.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NotificationProducer
     */
    @WebEndpoint(name = "NotificationProducerPort")
    public NotificationProducer getNotificationProducerPort(WebServiceFeature... features) {
        return super.getPort(NotificationProducerPort, NotificationProducer.class, features);
    }
    /**
     *
     * @return
     *     returns SubscriptionManager
     */
    @WebEndpoint(name = "SubscriptionManagerPort")
    public SubscriptionManager getSubscriptionManagerPort() {
        return super.getPort(SubscriptionManagerPort, SubscriptionManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SubscriptionManager
     */
    @WebEndpoint(name = "SubscriptionManagerPort")
    public SubscriptionManager getSubscriptionManagerPort(WebServiceFeature... features) {
        return super.getPort(SubscriptionManagerPort, SubscriptionManager.class, features);
    }
    /**
     *
     * @return
     *     returns NotificationConsumer
     */
    @WebEndpoint(name = "NotificationConsumerPort")
    public NotificationConsumer getNotificationConsumerPort() {
        return super.getPort(NotificationConsumerPort, NotificationConsumer.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NotificationConsumer
     */
    @WebEndpoint(name = "NotificationConsumerPort")
    public NotificationConsumer getNotificationConsumerPort(WebServiceFeature... features) {
        return super.getPort(NotificationConsumerPort, NotificationConsumer.class, features);
    }

}
